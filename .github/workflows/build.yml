name: build

# Triggers the workflow on push or pull request events
on: [push, pull_request]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install Go
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16'
    
    # Install dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint
        go get -t -v ./...

    # Build project
    - name: Build project
      run: go build ./...
      
    # Run go vet & golint
    - name: Run go vet & golint
      run: |
        go vet .
        golint .
    
    # Run tests
    - name: Run tests
      run: go test -race -coverprofile=coverage.txt -covermode=atomic

    # # Upload coverage report to Codecov
    # - name: Report to Codecov
    #   uses: codecov/codecov-action@v1.4.1
    #   with:
    #     file: ./coverage.txt
    #     # fail_ci_if_error: true # optional (default = false)

    # - name: Update latest release
    #   if: ${{ github.ref == 'refs/heads/main' }}
    #   uses: "marvinpinto/action-automatic-releases@latest"
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     automatic_release_tag: latest
    #     prerelease: true
    #     title: Development Build
    #     # files: |
    #     #   LICENSE.txt
    #     #   *.jar

    - name: Cleanup
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: AutoModality/action-clean@v1

    - name: Checkout repository
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: ls
      if: ${{ github.ref == 'refs/heads/main' }}
      run: ls -la ./cmd/progszy

    - name: Run GoReleaser
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      