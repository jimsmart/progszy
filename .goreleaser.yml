# project_name: progszy_extended
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    # - go generate ./...
builds:
- id: windows64
  binary: progszy
  main: ./cmd/progszy
  ldflags:
    - -s -w
    # - -s -w -X github.com/gohugoio/hugo/common/hugo.buildDate={{.Date}} -X github.com/gohugoio/hugo/common/hugo.commitHash={{ .ShortCommit }}
    - "-extldflags '-static'"
  env:
    - CGO_ENABLED=1
    - CC=x86_64-w64-mingw32-gcc
    - CXX=x86_64-w64-mingw32-g++
  flags:
    - -tags
    - extended
  goos:
    - windows
  goarch:
    - amd64
- id: darwin64
  binary: progszy
  main: ./cmd/progszy
  ldflags: -s -w
  # ldflags: -s -w -X github.com/gohugoio/hugo/common/hugo.buildDate={{.Date}} -X github.com/gohugoio/hugo/common/hugo.commitHash={{ .ShortCommit }}
  env:
    - CGO_ENABLED=1
    - CC=o64-clang
    - CXX=o64-clang++
  flags:
    - -tags
    - extended
  goos:
    - darwin
  goarch:
    - amd64
- id: linux64
  binary: progszy
  main: ./cmd/progszy
  ldflags: -s -w
  # ldflags: -s -w -X github.com/gohugoio/hugo/common/hugo.buildDate={{.Date}} -X github.com/gohugoio/hugo/common/hugo.commitHash={{ .ShortCommit }}
  env:
    - CGO_ENABLED=1
  flags:
    - -tags
    - extended
  goos:
    - linux
  goarch:
    - amd64
# archives:
#   format: tar.gz
#   format_overrides:
#     - goos: windows
#       format: zip
#   name_template: "{{.ProjectName}}_{{.Version}}_{{.Os}}-{{.Arch}}"
#   replacements:
#     amd64: 64bit
#     386: 32bit
#     arm: ARM
#     arm64: ARM64
#     darwin: macOS
#     linux: Linux
#     windows: Windows
#     openbsd: OpenBSD
#     netbsd: NetBSD
#     freebsd: FreeBSD
#     dragonfly: DragonFlyBSD
#   files:
#     - README.md
#     - LICENSE.md
release:
  draft: true
